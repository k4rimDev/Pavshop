version: '3.1'
services :

  mongo:
      image: mongo:latest
      container_name: mongo
      restart: always
      env_file: .env
      environment: 
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=root
        - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
        - MONGO_INITDB_USERNAME=${MONGO_DB_USERNAME}
        - MONGO_INITDB_PASSWORD=${MONGO_DB_PASSWORD}
      volumes:
        - ${PWD}/_data/mongo:/data/db
        - ${PWD}/docker/_mongo/fixtures:/import
        - ${PWD}/docker/_mongo/scripts/init.sh:/docker-entrypoint-initdb.d/setup.sh
      ports:
        - 27017:27017

  redis:
    build:
      context: .
      dockerfile: redis.dockerfile
    restart: "always"
    container_name: redis
    ports:
        - 6379:6379
    volumes:
        - ./redisdb:/var/lib/redis
    env_file: 
        - .env

  pavshop:
    build:
      context: .
      dockerfile: Dockerfile
    image: backend
    container_name: backend
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    restart: always
    tty: true
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:13-alpine
    container_name: pavshop_db
    restart: unless-stopped
    volumes:
        - ./postgresql:/var/lib/postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
  admin:
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - 8080:8080