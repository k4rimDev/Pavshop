"""
Django settings for pavshop project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
import os 
SECRET_KEY = "django-insecure-z$yl#p3+p@mr*f8yd&h7btgd287a)_ph3l@a1ygz7a4#do-#hc"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

LOCAL_APPS=[
    'users',
    'blog',
    'order',
    'product',
    'core',
    'cart',
    # 'api'
]

THIRD_APPS=[
    'jet.dashboard',
    'jet',
    'colorfield',
    'ckeditor',
    'django_render_partial',
    'crispy_forms',
    'widget_tweaks',

    'rosetta',

    'rest_framework',
    "knox",
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'corsheaders',
    'django_celery_beat',
    'django_social_share',
    'social_django'
]

INSTALLED_APPS = [
    'modeltranslation',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sessions.backends.db',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    *LOCAL_APPS,

    *THIRD_APPS,
]


SPECTACULAR_SETTINGS = {
    'TITLE': 'api',
    'DESCRIPTION': 'PAVSHOP E-commerce website',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,

    'SWAGGER_UI_DIST': 'SIDECAR',
    'SWAGGER_UI_FAVICON_HREF': 'SIDECAR',
    'REDOC_DIST': 'SIDECAR',
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    
    "django.middleware.locale.LocaleMiddleware",

    "corsheaders.middleware.CorsMiddleware",

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'users.middleware.BlacklistMiddleware',
    'users.middleware.RequestLogMiddleware',

    'social_django.middleware.SocialAuthExceptionMiddleware', # social login middleware
]



ROOT_URLCONF = 'pavshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / "templates"
        ], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_processors.cart_data',
                'tools.custom_context_processor.newsletter_subscription',
                'tools.custom_context_processor.search_renderer',
                'tools.custom_context_processor.user',
                'tools.get_language_context_processor.get_language',
                
                # Social Login Context processors
                'social_django.context_processors.backends', 
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'pavshop.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 5,
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.SessionAuthentication",
        "knox.auth.TokenAuthentication",
    ),
    'DEFAULT_PERMISSION_CLASSES':
    [
        'rest_framework.permissions.AllowAny'
    ]
}
# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases


REST_KNOX = {
    "SECURE_HASH_ALGORITHM": "cryptography.hazmat.primitives.hashes.SHA512",
    "AUTH_TOKEN_CHARACTER_LENGTH": 64,
    "TOKEN_TTL": None,
}

from dotenv import load_dotenv, find_dotenv

load_dotenv()

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': str(os.getenv('POSTGRES_DB')),
        'USER': str(os.getenv('POSTGRES_USER')),
        'PASSWORD': str(os.getenv('POSTGRES_PASSWORD')),
        'HOST': str(os.getenv('POSTGRES_HOST')),
        'PORT': str(os.getenv('POSTGRES_PORT')),
        # 'TEST':{
        #     'NAME': str(os.getenv('POSTGRES_TEST')),
        # },
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        # 'LOCATION': 'redis://127.0.0.1:6379/1',
        'LOCATION': 'redis://:{password}@0.0.0.0:6379/2'.format(password=os.environ.get("REDIS_PASSWORD")),
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Auth user model
AUTH_USER_MODEL = "users.User"

AUTHENTICATION_BACKENDS = (
    'users.backends.EmailOrUsernameAuthenticationBackend',

    # Social Auth backend
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.google.GoogleOAuth2',

    'django.contrib.auth.backends.ModelBackend',
)


LOGIN_URL = 'users:login'
LOGOUT_URL = 'users:logout'
LOGIN_REDIRECT_URL = 'core:home'
LOGOUT_REDIRECT_URL = 'users:login'


SOCIAL_AUTH_FACEBOOK_KEY = str(os.getenv("SOCIAL_AUTH_FACEBOOK_KEY"))
SOCIAL_AUTH_FACEBOOK_SECRET = str(os.getenv("SOCIAL_AUTH_FACEBOOK_SECRET"))

SOCIAL_AUTH_TWITTER_KEY = str(os.getenv("SOCIAL_AUTH_TWITTER_KEY"))
SOCIAL_AUTH_TWITTER_SECRET = str(os.getenv("SOCIAL_AUTH_TWITTER_SECRET"))

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = str(os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY"))
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = str(os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET"))

# Auth0 settings
AUTH0_DOMAIN = os.environ.get("AUTH0_DOMAIN")
AUTH0_CLIENT_ID = os.environ.get("AUTH0_CLIENT_ID")
AUTH0_CLIENT_SECRET = os.environ.get("AUTH0_CLIENT_SECRET")


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

from django.utils.translation import gettext_lazy as _

LANGUAGE_CODE = "en-us"
LANGUAGE_CODE = "az"

LANGAUGES = (
    ("en",  _("English")),
    ("ru", _("Russian")),
    ("az", _("Azerbaijani"))
)

TIME_ZONE = "Asia/Baku"

USE_I18N = True
USE_L10N = True

USE_TZ = True

LOCALE_PATHS = [
    BASE_DIR / "translations/locale"
]


# Model Translations
MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'

MODELTRANSLATION_LANGUAGES = ('az', 'en', 'ru')


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

# Media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
X_FRAME_OPTIONS = 'SAMEORIGIN'
JET_DEFAULT_THEME = 'light-green'
JET_SIDE_MENU_COMPACT = False

JET_THEMES = [
    {
        'theme': 'default', 
        'color': '#47bac1',
        'title': 'Default'
    },
    {
        'theme': 'green',
        'color': '#44b78b',
        'title': 'Green'
    },
    {
        'theme': 'light-green',
        'color': '#2faa60',
        'title': 'Light Green'
    },
    {
        'theme': 'light-violet',
        'color': '#a464c4',
        'title': 'Light Violet'
    },
    {
        'theme': 'light-blue',
        'color': '#5EADDE',
        'title': 'Light Blue'
    },
    {
        'theme': 'light-gray',
        'color': '#222',
        'title': 'Light Gray'
    },
]

    
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

"""
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",
    "http://127.0.0.1:8080",
    "http://127.0.0.1:9000",
    "http://127.0.0.1:5000",
    "http://127.0.0.1:5000",
    'https://www.sandbox.paypal.com',
]
"""

""" OR """
CORS_ALLOW_ALL_ORIGINS = True


#SMTP Configuration
TEMPLATED_EMAIL_BACKEND = 'templated_email.backends.vanilla_django.TemplateBackend'
TEMPLATED_EMAIL_AUTO_PLAIN = False
TEMPLATED_EMAIL_TEMPLATE_DIR = 'templated_email/'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('EMAIL_HOST_USER')
CRISPY_TEMPLATE_PACK = 'bootstrap4'